[0m[[0mdebug[0m] [0m[0m
[0m[[0mdebug[0m] [0mInitial source changes: [0m
[0m[[0mdebug[0m] [0m	removed:Set()[0m
[0m[[0mdebug[0m] [0m	added: Set()[0m
<<<<<<< HEAD
[0m[[0mdebug[0m] [0m	modified: Set(D:\Eclipse\Eclipse Projects\PL-Lab4\src\main\scala\Lab4.scala)[0m
[0m[[0mdebug[0m] [0mRemoved products: Set(D:\Eclipse\Eclipse Projects\PL-Lab4\target\scala-2.10\classes\Lab4$Node$.class, D:\Eclipse\Eclipse Projects\PL-Lab4\target\scala-2.10\classes\Lab4$$anonfun$step$1.class, D:\Eclipse\Eclipse Projects\PL-Lab4\target\scala-2.10\classes\Lab4.class, D:\Eclipse\Eclipse Projects\PL-Lab4\target\scala-2.10\classes\Lab4$$anonfun$3.class, D:\Eclipse\Eclipse Projects\PL-Lab4\target\scala-2.10\classes\Lab4$$anonfun$1.class, D:\Eclipse\Eclipse Projects\PL-Lab4\target\scala-2.10\classes\Lab4$$anonfun$treeFromList$1.class, D:\Eclipse\Eclipse Projects\PL-Lab4\target\scala-2.10\classes\Lab4$$anonfun$processFile$2.class, D:\Eclipse\Eclipse Projects\PL-Lab4\target\scala-2.10\classes\Lab4$Empty$.class, D:\Eclipse\Eclipse Projects\PL-Lab4\target\scala-2.10\classes\Lab4$$anonfun$7.class, D:\Eclipse\Eclipse Projects\PL-Lab4\target\scala-2.10\classes\Lab4$$anonfun$step$2.class, D:\Eclipse\Eclipse Projects\PL-Lab4\target\scala-2.10\classes\Lab4$$anonfun$typeInfer$2.class, D:\Eclipse\Eclipse Projects\PL-Lab4\target\scala-2.10\classes\Lab4$$anonfun$hasFunctionTyp$1.class, D:\Eclipse\Eclipse Projects\PL-Lab4\target\scala-2.10\classes\Lab4$Tree.class, D:\Eclipse\Eclipse Projects\PL-Lab4\target\scala-2.10\classes\Lab4$$anonfun$substitute$2.class, D:\Eclipse\Eclipse Projects\PL-Lab4\target\scala-2.10\classes\Lab4$$anonfun$2.class, D:\Eclipse\Eclipse Projects\PL-Lab4\target\scala-2.10\classes\Lab4$.class, D:\Eclipse\Eclipse Projects\PL-Lab4\target\scala-2.10\classes\Lab4$$anonfun$compressFold$1.class, D:\Eclipse\Eclipse Projects\PL-Lab4\target\scala-2.10\classes\Lab4$$anonfun$substitute$1.class, D:\Eclipse\Eclipse Projects\PL-Lab4\target\scala-2.10\classes\Lab4$$anonfun$6.class, D:\Eclipse\Eclipse Projects\PL-Lab4\target\scala-2.10\classes\Lab4$$anonfun$typeInfer$1.class, D:\Eclipse\Eclipse Projects\PL-Lab4\target\scala-2.10\classes\Lab4$$anonfun$5.class, D:\Eclipse\Eclipse Projects\PL-Lab4\target\scala-2.10\classes\Lab4$$anonfun$processFile$1.class, D:\Eclipse\Eclipse Projects\PL-Lab4\target\scala-2.10\classes\Lab4$$anonfun$sum$1.class, D:\Eclipse\Eclipse Projects\PL-Lab4\target\scala-2.10\classes\Lab4$$anonfun$4.class, D:\Eclipse\Eclipse Projects\PL-Lab4\target\scala-2.10\classes\Lab4$$anonfun$8.class, D:\Eclipse\Eclipse Projects\PL-Lab4\target\scala-2.10\classes\Lab4$Node.class)[0m
[0m[[0mdebug[0m] [0mModified external sources: Set()[0m
[0m[[0mdebug[0m] [0mModified binary dependencies: Set()[0m
[0m[[0mdebug[0m] [0mInitial directly invalidated sources: Set(D:\Eclipse\Eclipse Projects\PL-Lab4\src\main\scala\Lab4.scala)[0m
=======
[0m[[0mdebug[0m] [0m	modified: Set(/Users/Andrew/Developer/Scala/PL-Lab4/src/main/scala/Lab4.scala)[0m
[0m[[0mdebug[0m] [0mRemoved products: Set()[0m
[0m[[0mdebug[0m] [0mModified external sources: Set()[0m
[0m[[0mdebug[0m] [0mModified binary dependencies: Set()[0m
[0m[[0mdebug[0m] [0mInitial directly invalidated sources: Set(/Users/Andrew/Developer/Scala/PL-Lab4/src/main/scala/Lab4.scala)[0m
>>>>>>> 621dc6d09c1da96b3a5a9a5c8d459ad5ee1f9ddb
[0m[[0mdebug[0m] [0m[0m
[0m[[0mdebug[0m] [0mSources indirectly invalidated by:[0m
[0m[[0mdebug[0m] [0m	product: Set(D:\Eclipse\Eclipse Projects\PL-Lab4\src\main\scala\Lab4.scala)[0m
[0m[[0mdebug[0m] [0m	binary dep: Set()[0m
[0m[[0mdebug[0m] [0m	external source: Set()[0m
<<<<<<< HEAD
[0m[[0mdebug[0m] [0mAll initially invalidated sources: Set(D:\Eclipse\Eclipse Projects\PL-Lab4\src\main\scala\Lab4.scala)[0m
[0m[[0minfo[0m] [0mCompiling 1 Scala source to D:\Eclipse\Eclipse Projects\PL-Lab4\target\scala-2.10\classes...[0m
[0m[[0mdebug[0m] [0mGetting compiler-interface from component compiler for Scala 2.10.3[0m
[0m[[0mdebug[0m] [0mGetting compiler-interface from component compiler for Scala 2.10.3[0m
[0m[[0mdebug[0m] [0mRunning cached compiler 4aff7dfe, interfacing (CompilerInterface) with Scala compiler version 2.10.3[0m
[0m[[0mdebug[0m] [0mCalling Scala compiler with arguments  (CompilerInterface):[0m
[0m[[0mdebug[0m] [0m	-bootclasspath[0m
[0m[[0mdebug[0m] [0m	C:\Program Files\Java\jre7\lib\resources.jar;C:\Program Files\Java\jre7\lib\rt.jar;C:\Program Files\Java\jre7\lib\sunrsasign.jar;C:\Program Files\Java\jre7\lib\jsse.jar;C:\Program Files\Java\jre7\lib\jce.jar;C:\Program Files\Java\jre7\lib\charsets.jar;C:\Program Files\Java\jre7\classes;C:\Users\Bi\.sbt\boot\scala-2.10.3\lib\scala-library.jar[0m
[0m[[0mdebug[0m] [0m	-classpath[0m
[0m[[0mdebug[0m] [0m	D:\Eclipse\Eclipse Projects\PL-Lab4\target\scala-2.10\classes;D:\Eclipse\Eclipse Projects\PL-Lab4\lib\liblab4.jar;D:\Eclipse\Eclipse Projects\PL-Lab4\lib\scalatest_2.10-2.0.jar[0m
[0m[[33mwarn[0m] [0mD:\Eclipse\Eclipse Projects\PL-Lab4\src\main\scala\Lab4.scala:304: match may not be exhaustive.[0m
[0m[[33mwarn[0m] [0mIt would fail on the following inputs: B(_), Binary(_, _, _), Call(_, _), ConstDecl(_, _, _), Function(_, _, _, _), GetField(_, _), If(_, _, _), N(_), Print(_), S(_), Unary(_, _), Undefined, Var(_)[0m
[0m[[33mwarn[0m] [0m      case GetField(e1, f) => e1 match {[0m
[0m[[33mwarn[0m] [0m                              ^[0m
[0m[[33mwarn[0m] [0mone warning found[0m
[0m[[0mdebug[0m] [0mScala compilation took 5.512196062 s[0m
=======
[0m[[0mdebug[0m] [0mAll initially invalidated sources: Set(/Users/Andrew/Developer/Scala/PL-Lab4/src/main/scala/Lab4.scala)[0m
[0m[[0minfo[0m] [0mCompiling 1 Scala source to /Users/Andrew/Developer/Scala/PL-Lab4/target/scala-2.10/classes...[0m
[0m[[0mdebug[0m] [0mGetting compiler-interface from component compiler for Scala 2.10.3[0m
[0m[[0mdebug[0m] [0mGetting compiler-interface from component compiler for Scala 2.10.3[0m
[0m[[0mdebug[0m] [0mRunning cached compiler 3e24c18f, interfacing (CompilerInterface) with Scala compiler version 2.10.3[0m
[0m[[0mdebug[0m] [0mCalling Scala compiler with arguments  (CompilerInterface):[0m
[0m[[0mdebug[0m] [0m	-bootclasspath[0m
[0m[[0mdebug[0m] [0m	/Library/Java/JavaVirtualMachines/jdk1.7.0_45.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_45.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_45.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_45.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_45.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_45.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_45.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_45.jdk/Contents/Home/jre/lib/JObjC.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_45.jdk/Contents/Home/jre/classes:/Users/Andrew/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.10.3.jar[0m
[0m[[0mdebug[0m] [0m	-classpath[0m
[0m[[0mdebug[0m] [0m	/Users/Andrew/Developer/Scala/PL-Lab4/target/scala-2.10/classes:/Users/Andrew/Developer/Scala/PL-Lab4/lib/liblab4.jar:/Users/Andrew/Developer/Scala/PL-Lab4/lib/scalatest_2.10-2.0.jar[0m
[0m[[33mwarn[0m] [0m/Users/Andrew/Developer/Scala/PL-Lab4/src/main/scala/Lab4.scala:290: match may not be exhaustive.[0m
[0m[[33mwarn[0m] [0mIt would fail on the following inputs: B(_), Binary(_, _, _), Call(_, _), ConstDecl(_, _, _), Function(_, _, _, _), GetField(_, _), If(_, _, _), N(_), Print(_), S(_), Unary(_, _), Undefined[0m
[0m[[33mwarn[0m] [0m      case GetField(e1, f) => e1 match {[0m
[0m[[33mwarn[0m] [0m                              ^[0m
[0m[[33mwarn[0m] [0mone warning found[0m
[0m[[0mdebug[0m] [0mScala compilation took 11.89708 s[0m
>>>>>>> 621dc6d09c1da96b3a5a9a5c8d459ad5ee1f9ddb
[0m[[0mdebug[0m] [0mInvalidated by transitive public inheritance: Set()[0m
[0m[[0mdebug[0m] [0mInvalidated by direct dependency: Set()[0m
[0m[[0mdebug[0m] [0mNew invalidations:[0m
[0m[[0mdebug[0m] [0m	Set()[0m
[0m[[0mdebug[0m] [0mPreviously invalidated, but (transitively) depend on new invalidations:[0m
[0m[[0mdebug[0m] [0m	Set()[0m
